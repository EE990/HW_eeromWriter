<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HT32\52241\Obj\HT32.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HT32\52241\Obj\HT32.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Feb 05 13:51:49 2020
<BR><P>
<H3>Maximum Stack Usage =        132 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; I2C_EEPROM_Init &rArr; I2C_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">ADC_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[45]">I2C_TargetAddressConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45]">I2C_TargetAddressConfig</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[14]">BFTM0_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[15]">BFTM1_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[9]">EVWUP_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[f]">GPTM0_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from ht32f520xx_01_it.o(i.HardFault_Handler) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[16]">I2C0_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[17]">I2C1_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[6]">LVD_BOD_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[e]">MCTM0_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from ht32f520xx_01_it.o(i.NMI_Handler) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from ht32f520xx_01_it.o(i.PendSV_Handler) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[21]">Reset_Handler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[10]">SCTM0_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[11]">SCTM1_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[12]">SCTM2_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[13]">SCTM3_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[18]">SPI0_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from ht32f520xx_01_it.o(i.SVC_Handler) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from ht32f520xx_01_it.o(i.SysTick_Handler) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[1d]">SystemInit</a> from system_ht32f520xx_02.o(i.SystemInit) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[1b]">UART0_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[1c]">UART1_IRQHandler</a> from ht32f520xx_01_it.o(i.UART1_IRQHandler) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[1a]">USART0_IRQHandler</a> from startup_ht32f520xx_01.o(RESET) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[1e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ht32f520xx_01.o(RESET)
 <LI><a href="#[20]">fputc</a> from ht32_retarget.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))

<P><STRONG><a name="[d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>BFTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>BFTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[9]"></a>EVWUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[16]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[6]"></a>LVD_BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>MCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PDMA_CH0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[26]"></a>PDMA_CH2_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[10]"></a>SCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SCTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SCTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SCTM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[29]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f520xx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[5e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[5f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[60]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[61]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[62]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPLLFrequency
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_Configuration
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[63]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[64]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[65]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>AFIO_GPxConfig</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, ht32f520xx_gpio.o(i.AFIO_GPxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_COMInit
</UL>

<P><STRONG><a name="[4e]"></a>BFTM_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f520xx_bftm.o(i.BFTM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>BFTM_Configuration</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(i.BFTM_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BFTM_Configuration &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_SetCounter
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_SetCompare
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_OneShotModeCmd
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_IntConfig
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_EnaCmd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>BFTM_EnaCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f520xx_bftm.o(i.BFTM_EnaCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_Configuration
</UL>

<P><STRONG><a name="[5b]"></a>BFTM_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f520xx_bftm.o(i.BFTM_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>BFTM_IntConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f520xx_bftm.o(i.BFTM_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_Configuration
</UL>

<P><STRONG><a name="[35]"></a>BFTM_OneShotModeCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f520xx_bftm.o(i.BFTM_OneShotModeCmd))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_Configuration
</UL>

<P><STRONG><a name="[32]"></a>BFTM_SetCompare</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f520xx_bftm.o(i.BFTM_SetCompare))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_Configuration
</UL>

<P><STRONG><a name="[33]"></a>BFTM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f520xx_bftm.o(i.BFTM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_Configuration
</UL>

<P><STRONG><a name="[37]"></a>CKCU_Configuration</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.CKCU_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CKCU_Configuration &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>CKCU_GetClocksFrequency</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ht32f520xx_ckcu.o(i.CKCU_GetClocksFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPLLFrequency
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
</UL>

<P><STRONG><a name="[3a]"></a>CKCU_GetPLLFrequency</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ht32f520xx_ckcu.o(i.CKCU_GetPLLFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[3c]"></a>CKCU_GetPeripFrequency</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ht32f520xx_ckcu.o(i.CKCU_GetPeripFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[38]"></a>CKCU_PeripClockConfig</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, ht32f520xx_ckcu.o(i.CKCU_PeripClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_Configuration
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_COMInit
</UL>

<P><STRONG><a name="[3d]"></a>HT32F_DVB_COMInit</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ht32_board.o(i.HT32F_DVB_COMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HT32F_DVB_COMInit &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxRxCmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RETARGET_Configuration
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f520xx_01_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>I2C_AckCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_AckCmd))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_BufferRead
</UL>

<P><STRONG><a name="[43]"></a>I2C_CheckStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_CheckStatus))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_BufferRead
</UL>

<P><STRONG><a name="[51]"></a>I2C_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_EEPROM_AckPolling
</UL>

<P><STRONG><a name="[4b]"></a>I2C_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[41]"></a>I2C_EEPROM_BufferRead</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, i2c_eeprom.o(i.I2C_EEPROM_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_EEPROM_BufferRead &rArr; _I2C_EEPROM_AckPolling
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TargetAddressConfig
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckStatus
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AckCmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_EEPROM_AckPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_EEROM_data
</UL>

<P><STRONG><a name="[49]"></a>I2C_EEPROM_Init</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, i2c_eeprom.o(i.I2C_EEPROM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = I2C_EEPROM_Init &rArr; I2C_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_BufferRead
</UL>

<P><STRONG><a name="[50]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_EEPROM_AckPolling
</UL>

<P><STRONG><a name="[4a]"></a>I2C_Init</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, ht32f520xx_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = I2C_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_Init
</UL>

<P><STRONG><a name="[47]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_BufferRead
</UL>

<P><STRONG><a name="[44]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_BufferRead
</UL>

<P><STRONG><a name="[45]"></a>I2C_TargetAddressConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f520xx_i2c.o(i.I2C_TargetAddressConfig))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TargetAddressConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_BufferRead
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TargetAddressConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_I2C_EEPROM_AckPolling
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f520xx_01_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f520xx_01_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>RETARGET_Configuration</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ht32_retarget.o(i.RETARGET_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = RETARGET_Configuration &rArr; HT32F_DVB_COMInit &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_COMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>SERIAL_PutChar</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32_serial.o(i.SERIAL_PutChar))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f520xx_01_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f520xx_01_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SystemInit</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, system_ht32f520xx_02.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>UART1_IRQHandler</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, ht32f520xx_01_it.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_SetCounter
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_EnaCmd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f520xx_01.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>USART_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f520xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>USART_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ht32f520xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_COMInit
</UL>

<P><STRONG><a name="[58]"></a>USART_IntConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f520xx_usart.o(i.USART_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>USART_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f520xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>USART_TXRXTLConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ht32f520xx_usart.o(i.USART_TXRXTLConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_TXRXTLConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>USART_TxRxCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f520xx_usart.o(i.USART_TxRxCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_COMInit
</UL>

<P><STRONG><a name="[42]"></a>_I2C_EEPROM_AckPolling</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, i2c_eeprom.o(i._I2C_EEPROM_AckPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _I2C_EEPROM_AckPolling
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TargetAddressConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_BufferRead
</UL>

<P><STRONG><a name="[52]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[66]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[59]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_EEROM_data
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ht32f520xx_ckcu.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[67]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[68]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[69]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[20]"></a>fputc</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ht32_retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERIAL_PutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = main &rArr; I2C_EEPROM_Init &rArr; I2C_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; CKCU_GetPLLFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TXRXTLConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IntConfig
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RETARGET_Configuration
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_GetFlagStatus
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_EnaCmd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_ClearFlag
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_EEROM_data
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_Configuration
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_Configuration
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5a]"></a>print_EEROM_data</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, main.o(i.print_EEROM_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = print_EEROM_data &rArr; I2C_EEPROM_BufferRead &rArr; _I2C_EEPROM_AckPolling
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_BufferRead
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[53]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[55]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[54]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
